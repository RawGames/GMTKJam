<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// viktiga variabler
xspeed = 0;
yspeed = 0;

// cooldown
alarm[0] = -1;

boxes = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Måste finnas
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>left = keyboard_check(ord('A')) &amp;&amp; game_running;
right = keyboard_check(ord('D')) &amp;&amp; game_running;
up = keyboard_check_pressed(ord('W')) &amp;&amp; game_running;
jump = keyboard_check_pressed(vk_space) &amp;&amp; game_running;

if (place_meeting(x, y+1, obj_wall))
    xspeed = approach(xspeed, (right-left)*2, .5*game_running);
else 
    xspeed = approach(xspeed, (right-left)*2, .20*game_running);

if (place_meeting(x + xspeed, y, obj_wall)){
    // avrundar x så att man inte fastnar i vägg
    if (xspeed &gt; 0) x = floor(x);
    else x = ceil(x);
    // lägger till på x när man inte nuddar vägg
    while(!place_meeting(x + sign(xspeed), y, obj_wall)){
        x += sign(xspeed);
    }
    xspeed = 0;
}
// lägger till hastighet på x
x += xspeed*game_running;

if (place_meeting(x, y + yspeed, obj_wall)){
    // avrundar y
    if (yspeed &gt; 0) y = floor(y);
    else y = ceil(y);
    // lägger tiull på y näe man inte nuddar en vägg
    while(!place_meeting(x, y + sign(yspeed), obj_wall)){
        y += sign(yspeed);
    }
    yspeed = 0;
}
// lägger till hastighet på y
y += yspeed*game_running;

// kollar om man nuddar marken
if (place_meeting(x, y+1, obj_wall)){
    if (jump) yspeed = -4;
} else {
    yspeed += GRAV*game_running;
}

// gå genom dörr
if (up){
    if (place_meeting(x, y, obj_door)){
        door = instance_place(x, y, obj_door)
        room_goto(door.rm);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[0] &lt;= 0 &amp;&amp; boxes &gt; 0){
    angle = arctan2(mouse_x - x, mouse_y - y);
    box = instance_create(x, y-24, obj_expandable_box);
    box.xspeed = sin(angle)*7;
    box.yspeed = cos(angle)*7
    alarm[0] = 30;
    boxes --;
}

if (alarm[0] &gt; 15 &amp;&amp; alarm[0] != 30){
    angle = arctan2(box.x - x, box.y - y);
    box.xspeed = sin(angle)*7;
    box.yspeed = cos(angle)*7;
    
    xspeed = -sin(angle)*7;
    yspeed = -cos(angle)*5;
    
    scr_freeze(6);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
